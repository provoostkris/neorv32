# The NEORV32 RISC-V Processor - https://github.com/stnolting/neorv32
# OpenOCD on-chip debugger configuration file for SINGLE-CORE configuration

echo "NEORV32 single-core openOCD configuration."

# -------------------------------------------------------------------
# Physical interface configuration; ADJUST THIS FOR YOUR ADAPTER
# -------------------------------------------------------------------
adapter driver ftdi
ftdi vid_pid 0x0403 0x6010
ftdi channel 0
ftdi layout_init 0x0038 0x003b
adapter speed 4000
transport select jtag

# -------------------------------------------------------------------
# Target configuration
# -------------------------------------------------------------------
set _CHIPNAME neorv32
jtag newtap $_CHIPNAME cpu -irlen 5

set _TARGETNAME $_CHIPNAME.cpu

target create $_TARGETNAME riscv -chain-position $_TARGETNAME

# expose NEORV32-specific CSRs
riscv expose_csrs 2048=cfureg0
riscv expose_csrs 2049=cfureg1
riscv expose_csrs 2050=cfureg2
riscv expose_csrs 2051=cfureg3
riscv expose_csrs 4032=mxisa

# -------------------------------------------------------------------
# Server configuration
# -------------------------------------------------------------------
gdb report_data_abort enable

# -------------------------------------------------------------------
# Initialize target
# -------------------------------------------------------------------
init

# -------------------------------------------------------------------
# Authenticate; ADJUST THIS FOR YOUR AUTHENTICATOR
# -------------------------------------------------------------------
set challenge [riscv authdata_read]
riscv authdata_write [expr {$challenge | 1}]

# -------------------------------------------------------------------
# Check if device is authenticated (bit 7 in dmstatus)
# -------------------------------------------------------------------
set dmstatus [riscv dmi_read 0x11]
if { [expr {$dmstatus & (1<<7)}] } {
  echo "Authentication passed."
} else {
  echo "AUTHENTICATION FAILED!"
  exit
}

# -------------------------------------------------------------------
# Target should be halted and ready now
# -------------------------------------------------------------------
halt
echo "Target HALTED. Ready for remote connections."
